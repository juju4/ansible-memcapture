---

- name: Set fact winpmem_bin...
  ansible.builtin.set_fact:
    winpmem_bin: "{{ memcapture_bin_path }}\\{{ memcapture_winpmem_url | regex_replace('^.*/([^/].*)$', '\\1') }}"
    winpmem_capture: "{{ dst_path }}\\{{ prefix }}-memory.{{ memcapture_winpmem_ext }}"

- name: Check if winpmem binary is present
  ansible.windows.win_stat:
    path: "{{ winpmem_bin }}"
  register: winpmem
- name: Winpmem download
  ansible.windows.win_get_url:
    url: "{{ memcapture_winpmem_url }}"
    dest: "{{ winpmem_bin }}"
    mode: '0400'
  register: dl_result
  until: dl_result is success
  when: not winpmem.stat.exists and memcapture_download | bool

- name: Check if existing winpmem capture
  ansible.windows.win_stat:
    path: "{{ winpmem_capture }}"
  register: memcapture2

# https://df-stream.com/2017/08/memory-acquisition-and-virtual-secure/
# http://blog.rekall-forensic.com/2018/09/virtual-secure-mode-and-memory.html
- name: Check if Virtual Secure Mode is enabled
  ansible.windows.win_shell: Get-Process 'Secure System' -ErrorAction SilentlyContinue
  register: vsm

- name: Debug | Virtual Secure Mode
  ansible.builtin.debug:
    var: vsm

- name: Wait user confirmation before starting memory capture
  ansible.builtin.pause:

## FIXME! through powershell ? (ansible 'script:')
- name: Do memory capture (winpmem)
  ansible.builtin.raw: "{{ winpmem_bin }} -o {{ winpmem_capture }}"
  when: not memcapture2.stat.exists and (memcapture_capture is defined and memcapture_capture | bool)
  notify:
    - Win disk sync

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Retrieve output hash
  ansible.builtin.stat:
    path: "{{ winpmem_capture }}"
  register: outputstat
- name: Debug | output file hash
  ansible.builtin.debug:
    var: outputstat.stat.checksum

## https://docs.google.com/presentation/d/1savcvqRcMXpRyVrybWvbHGbJTgjInZcwLB5VokJdKa8/edit#slide=id.g26dcd0ccb_030
# "c:\Program Files\Rekall\winpmem_1.6.0.exe" -e - | c:\Users\mic\Desktop\ncat.exe 172.16.21.93 8001  --ssl
# ncat -l 8001 --ssl -v > myimage.elf
