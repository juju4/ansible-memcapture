---
## for older systems, use fmem
## FIXME! rpm packages from https://forensics.cert.org/
- name: FATAL
  ansible.builtin.fail:
    msg: "Missing memory size! required for fmem."
  when: memory_size is undefined

- name: Debian | Extra packages install
  ansible.builtin.apt:
    name: ['make', 'gcc', 'linux-generic', 'linux-headers-{{ ansible_kernel }}']
    state: present
  become: yes
  when: memcapture_install is defined and memcapture_install
  register: pkg_result
  until: pkg_result is success

- name: Check if fmem archive is present
  ansible.builtin.stat:
    path: "{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}.tgz"
  register: fmem
- name: Fmem download
  ansible.builtin.get_url:
    url: "http://hysteria.cz/niekt0/fmem/fmem_{{ memcapture_fmem_v }}.tgz"
    dest: "{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}.tgz"
    mode: '0400'
  register: dl_result
  until: dl_result is success
  when: not fmem.stat.exists and (memcapture_download is defined and memcapture_download | bool)
- name: Extract fmem
  ansible.builtin.unarchive:
    src: "{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}.tgz"
    dest: "{{ memcapture_bin_path }}"
  when: not fmem.stat.exists and (memcapture_download is defined and memcapture_download | bool)

# change memory size

- name: Check if already a capture file
  ansible.builtin.stat:
    path: "{{ dst_path }}/{{ prefix }}-fmem-memory.img"
  register: memcapture2
- name: FMEM | procinfo
  ansible.builtin.shell:  # noqa command-instead-of-shell no-changed-when
    cmd: "{{ item }}"
  with_items:
    - "cat /proc/meminfo > {{ dst_path }}/{{ prefix }}-proc-meminfo"
    - "cat /proc/iomem > {{ dst_path }}/{{ prefix }}-proc-iomem"
    - "cat /proc/mtrr > {{ dst_path }}/{{ prefix }}-proc-mtrr"
  when: not memcapture2.stat.exists

- name: Check if fmem.ko exists
  ansible.builtin.stat:
    path: "{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}/fmem.ko"
  register: fmemko
## fmem.ko is probably kernel dependent, so better rebuild... or prebuilt
- name: FMEM | memory capture
  ansible.builtin.command:  # noqa no-changed-when
    cmd: make
  args:
    chdir: "{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}"
  when: not fmemko.stat.exists and (memcapture_build is defined and memcapture_build | bool)

## if multiple pre-compiled fmem
# - copy: src={{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}/run.sh dest={{ dst_path }}/run.sh mode=0755
# - replace:
#     dest: "{{ dst_path }}/run.sh"
#     regexp: 'fmem.ko'
#     replace: '{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}/fmem-{{ ansible_kernel }}.ko'

- name: FMEM | memory capture (1)
  ansible.builtin.command:  # noqa no-changed-when
    cmd: "./run.sh"
  args:
    chdir: "{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}"
  become: yes
  ## if run.sh/fmem.ko already loaded
  failed_when: false
  when: not memcapture2.stat.exists and (memcapture_capture is defined and memcapture_capture | bool)
- name: FMEM | memory capture (2)
  ansible.builtin.command:  # noqa no-changed-when
    cmd: >
      dd if=/dev/fmem of={{ dst_path }}/{{ prefix }}-memory-fmem.img conv=noerror,sync bs={{ memcapture_memory_bs }}
        count={{ memcapture_memory_size }}
  args:
    chdir: "{{ memcapture_bin_path }}/fmem_{{ memcapture_fmem_v }}"
  become: yes
  when: not memcapture2.stat.exists and (memcapture_capture is defined and memcapture_capture | bool)

- name: Retrieve output hash
  ansible.builtin.stat:
    path: "{{ dst_path }}/{{ prefix }}-memory-fmem.img"
    checksum_algorithm: sha256
  register: outputstat
- name: Debug | file output hash
  ansible.builtin.debug:
    var: outputstat.stat.checksum
