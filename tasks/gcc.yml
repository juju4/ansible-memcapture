---

- name: ensure gcc is present
  ansible.builtin.package: name=gcc state=present
  register: pkg_result
  until: pkg_result is success

- name: check if gcc path exists
  ansible.builtin.stat: path=/usr/bin/gcc
  register: gcc
- name: check if gcc-5 path exists
  ansible.builtin.stat: path=/usr/bin/gcc-5
  register: gcc5
- name: check if gcc-4.8 path exists
  ansible.builtin.stat: path=/usr/bin/gcc-4.8
  register: gcc4

# - ansible.builtin.debug: var=gcc
# - ansible.builtin.debug: var=gcc5

- name: Ubuntu xenial | update default config to gcc-5 for gcc
  # ansible.builtin.command: "update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5"
  ansible.builtin.command: "update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60"
  when: >
    (not gcc.stat.exists or (gcc.stat.lnk_source is defined and gcc.stat.lnk_source == "/usr/bin/None")) and
    gcc5.stat.exists and ansible_os_family == 'Debian' and ansible_distribution_release == 'xenial'

- name: Ubuntu trusty | update default config to gcc-4.8 for gcc
  ansible.builtin.command: "update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 60"
  when: >
    (not gcc.stat.exists or (gcc.stat.lnk_source is defined and gcc.stat.lnk_source == "/usr/bin/None")) and
    gcc4.stat.exists and ansible_os_family == 'Debian' and ansible_distribution_release == 'trusty'
